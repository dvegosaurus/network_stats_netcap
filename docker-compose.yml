version: '3.2'

volumes:
  influxdb-volume:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/etc/docker/docker-data/influxDB'
  elasticsearch:

services:
  netcap:
    image: dreadl0ck/netcap:alpine-v0.5
    command: >
      net export -iface eth0 -dpi=true -reverse-dns=true
    network_mode: host

  grafana:
    image: grafana/grafana
    volumes:
      - ./grafana/provisionning:/etc/grafana/provisioning
    ports: 
      - 3000:3000

  telegraf:
    image: telegraf
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    network_mode: host

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - 8086:8086
    volumes:
      - influxdb-volume:/vol01/Docker/monitoring
    environment:
      - INFLUXDB_DB=telegraf
      # - INFLUXDB_USER=telegraf
      # - INFLUXDB_ADMIN_ENABLED=true
      # - INFLUXDB_ADMIN_USER=admin
      # - INFLUXDB_ADMIN_PASSWORD=Welcome1 

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node

  logstash:
    image: docker.elastic.co/logstash/logstash:7.15.2
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.2
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
  
